<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
    <!-- 加载数据库的文件 -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!-- 配置数据源 -->
	<!-- 数据源，使用dbcp -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="5" />
	</bean>
    <!-- 配置sqlSessionFactory -->
    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载mybatis的配置文件 -->
		<property name="configLocation" value="mybatis/SqlMapConfig.xml"/>
		
		<!-- 加载数据源 -->
		<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 原始DAO -->
    <bean id="userDao" class="com.ztx.ssm.dao.UserDaoImpl">
    	<property name="SqlSessionFactory" ref="SqlSessionFactory"/>
    </bean>
    
    <!-- 
    	mapper 代理
    	MapperFactoryBean：根据mapper接口生成代理对象
     -->
	<!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> -->
	<!-- mapperInterface 指定mapper接口 -->
	<!-- <property name="mapperInterface" value="com.ztx.ssm.mapper.UserMapper"/> -->
	<!-- <property name="SqlSessionFactory" ref="SqlSessionFactory"/> -->
	<!-- </bean> -->
     
     <!-- mapper批量扫描：从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注册
    	遵循规范：将mapper.java和mapper.xml 映射文件名称保持一致，且在同一个目录中
    	自动扫描出来的mapper的 bean的id 为mapper类名（首字母小写）-->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     	<!--
     		 指定扫描的报名
     		 如果为多个包，每个包中间使用半角逗号分隔
     	 -->
     	<property name="basePackage" value="com.ztx.ssm.mapper"/>
     	<property name="sqlSessionFactoryBeanName" value="SqlSessionFactory"/>
     </bean>
</beans>